<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="5ba16ef2-07a3-4b44-96fb-8f23d2693abd" activeEnvironment="Default" name="Casablanca Quoting Service" resourceRoot="" soapui-version="5.4.0" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:RestService" id="c667922e-982a-422c-8287-16d90437f20c" wadlVersion="http://wadl.dev.java.net/2009/02" name="Quoting related parts of Open API for FSP Interoperability (FSPIOP) (Implementation Friendly Version)" type="rest" basePath="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:description>Based on API Definition.docx updated on 2018-03-13 Version 1.0. Note - The API supports a maximum size of 65536 bytes (64 Kilobytes) in the HTTP header.</con:description><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>http://172.17.0.3:3000</con:endpoint></con:endpoints><con:resource name="/bulkQuotes" path="/bulkQuotes" id="94b51435-3cae-4a98-bd93-1d666b1b7b9d"><con:settings/><con:parameters/><con:method name="BulkQuotes" id="36ae0b64-9b51-4f6a-aac4-dc749cbb016f" method="POST"><con:description>The HTTP request POST /bulkQuotes is used to request the creation of a bulk quote for the provided financial transactions in the server.
BulkQuotes</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>accept</con:name><con:style>HEADER</con:style><con:description>The Accept header field indicates the version of the API the client would like the server to use.</con:description></con:parameter><con:parameter><con:name>content-length</con:name><con:style>HEADER</con:style><con:description>The Content-Length header field indicates the anticipated size of the payload body. Only sent if there is a body. Note - The API supports a maximum size of 5242880 bytes (5 Megabytes)</con:description></con:parameter><con:parameter required="true"><con:name>content-type</con:name><con:style>HEADER</con:style><con:description>The Content-Type header indicates the specific version of the API used to send the payload body.</con:description></con:parameter><con:parameter required="true"><con:name>date</con:name><con:style>HEADER</con:style><con:description>The Date header field indicates the date when the request was sent.</con:description></con:parameter><con:parameter><con:name>x-forwarded-for</con:name><con:style>HEADER</con:style><con:description>The X-Forwarded-For header field is an unofficially accepted standard used for informational purposes of the originating client IP address, as a request might pass multiple proxies, firewalls, and so on. Multiple X-Forwarded-For values as in the example shown here should be expected and supported by implementers of the API. Note - An alternative to X-Forwarded-For is defined in RFC 7239. However, to this point RFC 7239 is less-used and supported than X-Forwarded-For.</con:description></con:parameter><con:parameter required="true"><con:name>fspiop-source</con:name><con:style>HEADER</con:style><con:description>The FSPIOP-Source header field is a non-HTTP standard field used by the API for identifying the sender of the HTTP request. The field should be set by the original sender of the request. Required for routing and signature verification (see header field FSPIOP-Signature).</con:description></con:parameter><con:parameter><con:name>fspiop-destination</con:name><con:style>HEADER</con:style><con:description>The FSPIOP-Destination header field is a non-HTTP standard field used by the API for HTTP header based routing of requests and responses to the destination. The field should be set by the original sender of the request (if known), so that any entities between the client and the server do not need to parse the payload for routing purposes.</con:description></con:parameter><con:parameter><con:name>fspiop-encryption</con:name><con:style>HEADER</con:style><con:description>The FSPIOP-Encryption header field is a non-HTTP standard field used by the API for applying end-to-end encryption of the request.</con:description></con:parameter><con:parameter><con:name>fspiop-signature</con:name><con:style>HEADER</con:style><con:description>The FSPIOP-Signature header field is a non-HTTP standard field used by the API for applying an end-to-end request signature.</con:description></con:parameter><con:parameter><con:name>fspiop-uri</con:name><con:style>HEADER</con:style><con:description>The FSPIOP-URI header field is a non-HTTP standard field used by the API for signature verification, should contain the service URI. Required if signature verification is used, for more information see API Signature document.</con:description></con:parameter><con:parameter><con:name>fspiop-http-method</con:name><con:style>HEADER</con:style><con:description>The FSPIOP-HTTP-Method header field is a non-HTTP standard field used by the API for signature verification, should contain the service HTTP method. Required if signature verification is used, for more information see API Signature document.</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>202</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>406</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>501</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/></con:representation><con:request name="Request 1" id="bd65ad86-944d-40ed-8c8c-ac3957a31f48" mediaType="application/json"><con:settings/><con:endpoint>http://172.17.0.3:3000</con:endpoint><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/></con:credentials><con:parameters/></con:request></con:method></con:resource><con:resource name="/bulkQuotes/{ID}" path="/bulkQuotes/{ID}" id="c9ae7fbe-f9bc-4bcb-83cc-76e44a01424e"><con:settings/><con:parameters/><con:method name="BulkQuotesByID" id="d85ad670-4ac6-406f-b97c-6e85465d6ddf" method="GET"><con:description>The HTTP request GET /bulkQuotes/&lt;ID> is used to get information regarding an earlier created or requested bulk quote. The &lt;ID> in the URI should contain the bulkQuoteId that was used for the creation of the bulk quote.
BulkQuotesByID</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>accept</con:name><con:style>HEADER</con:style><con:description>The Accept header field indicates the version of the API the client would like the server to use.</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>202</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>406</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>501</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/></con:representation><con:request name="Request 1" id="a711ee0b-e422-4662-9190-a5790cf7462c" mediaType="application/json"><con:settings/><con:endpoint>http://172.17.0.3:3000</con:endpoint><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/></con:credentials><con:parameters/></con:request></con:method><con:method name="BulkQuotesByID1" id="1c92c663-37d4-4467-a2eb-beff443978e0" method="PUT"><con:description>The callback PUT /bulkQuotes/&lt;ID> is used to inform the client of a requested or created bulk quote. The &lt;ID> in the URI should contain the bulkQuoteId that was used for the creation of the bulk quote, or the &lt;ID> that was used in the GET /bulkQuotes/&lt;ID>.
BulkQuotesByID</con:description><con:settings/><con:parameters><con:parameter><con:name>content-length</con:name><con:style>HEADER</con:style><con:description>The Content-Length header field indicates the anticipated size of the payload body. Only sent if there is a body. Note - The API supports a maximum size of 5242880 bytes (5 Megabytes)</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>406</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>501</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/></con:representation><con:request name="Request 1" id="32180a54-fb3e-417b-8988-d4c88b85792a" mediaType="application/json"><con:settings/><con:endpoint>http://172.17.0.3:3000</con:endpoint><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/></con:credentials><con:parameters/></con:request></con:method></con:resource><con:resource name="/bulkQuotes/{ID}/error" path="/bulkQuotes/{ID}/error" id="762be189-6055-4e32-824f-eaf71b8034ae"><con:settings/><con:parameters/><con:method name="BulkQuotesErrorByID" id="4386007d-2569-448e-8c25-00b2729a668e" method="PUT"><con:description>If the server is unable to find or create a bulk quote, or another processing error occurs, the error callback PUT /bulkQuotes/&lt;ID>/error is used. The &lt;ID> in the URI should contain the bulkQuoteId that was used for the creation of the bulk quote, or the &lt;ID> that was used in the GET /bulkQuotes/&lt;ID>.
BulkQuotesErrorByID</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>ID</con:name><con:style>TEMPLATE</con:style><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>content-length</con:name><con:style>HEADER</con:style><con:description>The Content-Length header field indicates the anticipated size of the payload body. Only sent if there is a body. Note - The API supports a maximum size of 5242880 bytes (5 Megabytes)</con:description></con:parameter><con:parameter required="true"><con:name>content-type</con:name><con:style>HEADER</con:style><con:description>The Content-Type header indicates the specific version of the API used to send the payload body.</con:description></con:parameter><con:parameter required="true"><con:name>date</con:name><con:style>HEADER</con:style><con:description>The Date header field indicates the date when the request was sent.</con:description></con:parameter><con:parameter><con:name>x-forwarded-for</con:name><con:style>HEADER</con:style><con:description>The X-Forwarded-For header field is an unofficially accepted standard used for informational purposes of the originating client IP address, as a request might pass multiple proxies, firewalls, and so on. Multiple X-Forwarded-For values as in the example shown here should be expected and supported by implementers of the API. Note - An alternative to X-Forwarded-For is defined in RFC 7239. However, to this point RFC 7239 is less-used and supported than X-Forwarded-For.</con:description></con:parameter><con:parameter required="true"><con:name>fspiop-source</con:name><con:style>HEADER</con:style><con:description>The FSPIOP-Source header field is a non-HTTP standard field used by the API for identifying the sender of the HTTP request. The field should be set by the original sender of the request. Required for routing and signature verification (see header field FSPIOP-Signature).</con:description></con:parameter><con:parameter><con:name>fspiop-destination</con:name><con:style>HEADER</con:style><con:description>The FSPIOP-Destination header field is a non-HTTP standard field used by the API for HTTP header based routing of requests and responses to the destination. The field should be set by the original sender of the request (if known), so that any entities between the client and the server do not need to parse the payload for routing purposes.</con:description></con:parameter><con:parameter><con:name>fspiop-encryption</con:name><con:style>HEADER</con:style><con:description>The FSPIOP-Encryption header field is a non-HTTP standard field used by the API for applying end-to-end encryption of the request.</con:description></con:parameter><con:parameter><con:name>fspiop-signature</con:name><con:style>HEADER</con:style><con:description>The FSPIOP-Signature header field is a non-HTTP standard field used by the API for applying an end-to-end request signature.</con:description></con:parameter><con:parameter><con:name>fspiop-uri</con:name><con:style>HEADER</con:style><con:description>The FSPIOP-URI header field is a non-HTTP standard field used by the API for signature verification, should contain the service URI. Required if signature verification is used, for more information see API Signature document.</con:description></con:parameter><con:parameter><con:name>fspiop-http-method</con:name><con:style>HEADER</con:style><con:description>The FSPIOP-HTTP-Method header field is a non-HTTP standard field used by the API for signature verification, should contain the service HTTP method. Required if signature verification is used, for more information see API Signature document.</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>406</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>501</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/></con:representation><con:request name="Request 1" id="ea219e23-39d0-463b-bbc5-e3c23109afb4" mediaType="application/json"><con:settings/><con:endpoint>http://172.17.0.3:3000</con:endpoint><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/></con:credentials><con:parameters/></con:request></con:method></con:resource><con:resource name="/quotes" path="/quotes" id="30532857-01e5-409d-8495-772210b28afc"><con:settings/><con:parameters/><con:method name="Quotes" id="60bf67b7-4442-4378-bbdf-a71eff51ea42" method="POST"><con:description>The HTTP request POST /quotes is used to request the creation of a quote for the provided financial transaction in the server.
Quotes</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>accept</con:name><con:style>HEADER</con:style><con:description>The Accept header field indicates the version of the API the client would like the server to use.</con:description></con:parameter><con:parameter><con:name>content-length</con:name><con:style>HEADER</con:style><con:description>The Content-Length header field indicates the anticipated size of the payload body. Only sent if there is a body. Note - The API supports a maximum size of 5242880 bytes (5 Megabytes)</con:description></con:parameter><con:parameter required="true"><con:name>content-type</con:name><con:style>HEADER</con:style><con:description>The Content-Type header indicates the specific version of the API used to send the payload body.</con:description></con:parameter><con:parameter required="true"><con:name>date</con:name><con:style>HEADER</con:style><con:description>The Date header field indicates the date when the request was sent.</con:description></con:parameter><con:parameter><con:name>x-forwarded-for</con:name><con:style>HEADER</con:style><con:description>The X-Forwarded-For header field is an unofficially accepted standard used for informational purposes of the originating client IP address, as a request might pass multiple proxies, firewalls, and so on. Multiple X-Forwarded-For values as in the example shown here should be expected and supported by implementers of the API. Note - An alternative to X-Forwarded-For is defined in RFC 7239. However, to this point RFC 7239 is less-used and supported than X-Forwarded-For.</con:description></con:parameter><con:parameter required="true"><con:name>fspiop-source</con:name><con:style>HEADER</con:style><con:description>The FSPIOP-Source header field is a non-HTTP standard field used by the API for identifying the sender of the HTTP request. The field should be set by the original sender of the request. Required for routing and signature verification (see header field FSPIOP-Signature).</con:description></con:parameter><con:parameter><con:name>fspiop-destination</con:name><con:style>HEADER</con:style><con:description>The FSPIOP-Destination header field is a non-HTTP standard field used by the API for HTTP header based routing of requests and responses to the destination. The field should be set by the original sender of the request (if known), so that any entities between the client and the server do not need to parse the payload for routing purposes.</con:description></con:parameter><con:parameter><con:name>fspiop-encryption</con:name><con:style>HEADER</con:style><con:description>The FSPIOP-Encryption header field is a non-HTTP standard field used by the API for applying end-to-end encryption of the request.</con:description></con:parameter><con:parameter><con:name>fspiop-signature</con:name><con:style>HEADER</con:style><con:description>The FSPIOP-Signature header field is a non-HTTP standard field used by the API for applying an end-to-end request signature.</con:description></con:parameter><con:parameter><con:name>fspiop-uri</con:name><con:style>HEADER</con:style><con:description>The FSPIOP-URI header field is a non-HTTP standard field used by the API for signature verification, should contain the service URI. Required if signature verification is used, for more information see API Signature document.</con:description></con:parameter><con:parameter><con:name>fspiop-http-method</con:name><con:style>HEADER</con:style><con:description>The FSPIOP-HTTP-Method header field is a non-HTTP standard field used by the API for signature verification, should contain the service HTTP method. Required if signature verification is used, for more information see API Signature document.</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>202</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>406</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>501</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>202</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>202</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" id="2e5040d2-22c0-4fd7-91d1-7b8711ce4c3a" mediaType="application/json" postQueryString="false"><con:settings/><con:endpoint>http://172.17.0.3:3000</con:endpoint><con:request/><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="/quotes/{ID}" path="/quotes/{ID}" id="c295996d-2126-4293-94ac-db3c9edaf5d1"><con:settings/><con:parameters><con:parameter required="true"><con:name>ID</con:name><con:value>000</con:value><con:style>TEMPLATE</con:style><con:default>000</con:default></con:parameter></con:parameters><con:method name="QuotesByID" id="cedd03ad-09ad-44a6-a5ce-24723aa3dc77" method="GET"><con:description>The HTTP request GET /quotes/&lt;ID> is used to get information regarding an earlier created or requested quote. The &lt;ID> in the URI should contain the quoteId that was used for the creation of the quote.
QuotesByID</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>accept</con:name><con:style>HEADER</con:style><con:description>The Accept header field indicates the version of the API the client would like the server to use.</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>202</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>406</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>501</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/></con:representation><con:request name="Request 1" id="e2759734-42b9-4932-be20-415683f7bd43" mediaType="application/json"><con:settings/><con:endpoint>http://172.17.0.3:3000</con:endpoint><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/></con:credentials><con:parameters><entry key="ID" value="000" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>accept</con:entry><con:entry>ID</con:entry></con:parameterOrder></con:request></con:method><con:method name="QuotesByID1" id="82f24a8e-94dc-45ee-a29d-42920a696666" method="PUT"><con:description>The callback PUT /quotes/&lt;ID> is used to inform the client of a requested or created quote. The &lt;ID> in the URI should contain the quoteId that was used for the creation of the quote, or the &lt;ID> that was used in the GET /quotes/&lt;ID>GET /quotes/&lt;ID>.
QuotesByID</con:description><con:settings/><con:parameters><con:parameter><con:name>content-length</con:name><con:style>HEADER</con:style><con:description>The Content-Length header field indicates the anticipated size of the payload body. Only sent if there is a body. Note - The API supports a maximum size of 5242880 bytes (5 Megabytes)</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>406</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>501</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/></con:representation><con:request name="Request 1" id="bd1b43d7-1bc8-4512-bbcd-eb7bdc954e93" mediaType="application/json"><con:settings/><con:endpoint>http://172.17.0.3:3000</con:endpoint><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/></con:credentials><con:parameters><entry key="ID" value="000" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>content-length</con:entry><con:entry>ID</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="/quotes/{ID}/error" path="/quotes/{ID}/error" id="3c5d7b3d-032b-4f68-8e01-b3057703f6ad"><con:settings/><con:parameters/><con:method name="QuotesByIDAndError" id="1935cbb1-e76a-48be-af97-6035ceacb057" method="PUT"><con:description>If the server is unable to find or create a quote, or some other processing error occurs, the error callback PUT /quotes/&lt;ID>/error is used. The &lt;ID> in the URI should contain the quoteId that was used for the creation of the quote, or the &lt;ID> that was used in the GET /quotes/&lt;ID>.
QuotesByIDAndError</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>ID</con:name><con:style>TEMPLATE</con:style><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>content-length</con:name><con:style>HEADER</con:style><con:description>The Content-Length header field indicates the anticipated size of the payload body. Only sent if there is a body. Note - The API supports a maximum size of 5242880 bytes (5 Megabytes)</con:description></con:parameter><con:parameter required="true"><con:name>content-type</con:name><con:style>HEADER</con:style><con:description>The Content-Type header indicates the specific version of the API used to send the payload body.</con:description></con:parameter><con:parameter required="true"><con:name>date</con:name><con:style>HEADER</con:style><con:description>The Date header field indicates the date when the request was sent.</con:description></con:parameter><con:parameter><con:name>x-forwarded-for</con:name><con:style>HEADER</con:style><con:description>The X-Forwarded-For header field is an unofficially accepted standard used for informational purposes of the originating client IP address, as a request might pass multiple proxies, firewalls, and so on. Multiple X-Forwarded-For values as in the example shown here should be expected and supported by implementers of the API. Note - An alternative to X-Forwarded-For is defined in RFC 7239. However, to this point RFC 7239 is less-used and supported than X-Forwarded-For.</con:description></con:parameter><con:parameter required="true"><con:name>fspiop-source</con:name><con:style>HEADER</con:style><con:description>The FSPIOP-Source header field is a non-HTTP standard field used by the API for identifying the sender of the HTTP request. The field should be set by the original sender of the request. Required for routing and signature verification (see header field FSPIOP-Signature).</con:description></con:parameter><con:parameter><con:name>fspiop-destination</con:name><con:style>HEADER</con:style><con:description>The FSPIOP-Destination header field is a non-HTTP standard field used by the API for HTTP header based routing of requests and responses to the destination. The field should be set by the original sender of the request (if known), so that any entities between the client and the server do not need to parse the payload for routing purposes.</con:description></con:parameter><con:parameter><con:name>fspiop-encryption</con:name><con:style>HEADER</con:style><con:description>The FSPIOP-Encryption header field is a non-HTTP standard field used by the API for applying end-to-end encryption of the request.</con:description></con:parameter><con:parameter><con:name>fspiop-signature</con:name><con:style>HEADER</con:style><con:description>The FSPIOP-Signature header field is a non-HTTP standard field used by the API for applying an end-to-end request signature.</con:description></con:parameter><con:parameter><con:name>fspiop-uri</con:name><con:style>HEADER</con:style><con:description>The FSPIOP-URI header field is a non-HTTP standard field used by the API for signature verification, should contain the service URI. Required if signature verification is used, for more information see API Signature document.</con:description></con:parameter><con:parameter><con:name>fspiop-http-method</con:name><con:style>HEADER</con:style><con:description>The FSPIOP-HTTP-Method header field is a non-HTTP standard field used by the API for signature verification, should contain the service HTTP method. Required if signature verification is used, for more information see API Signature document.</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>406</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>501</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/></con:representation><con:request name="Request 1" id="53dac345-0bc0-42c1-b6fc-a0e1cd9823dc" mediaType="application/json"><con:settings/><con:endpoint>http://172.17.0.3:3000</con:endpoint><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/></con:credentials><con:parameters/></con:request></con:method></con:resource></con:interface><con:testSuite id="cead5c26-82cd-4659-afb1-292bc5eac7b7" name="Quotes Test Suite"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="7340449a-d35d-442a-aa0e-00cd6c237aa9" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="POST Quotes" searchProperties="true"><con:settings/><con:testStep type="properties" name="Quote Params" id="2d222c7c-1c48-45e2-8638-f33cf3a99dea"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>QuoteId</con:name><con:value>%GUID</con:value></con:property><con:property><con:name>TransferId</con:name><con:value>%GUID</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Quotes - POST Quote" id="4afda6c7-9021-4bef-9683-4962b86b3eff"><con:settings/><con:config service="Quoting related parts of Open API for FSP Interoperability (FSPIOP) (Implementation Friendly Version)" resourcePath="/quotes" methodName="Quotes" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Quotes - POST Quote" id="2e5040d2-22c0-4fd7-91d1-7b8711ce4c3a" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://172.17.0.3:3000</con:endpoint><con:request>{
    "quoteId": "${=java.util.UUID.randomUUID()}",
    "transactionId": "${=java.util.UUID.randomUUID()}",
    "payee": {
        "partyIdInfo": {
            "partyIdType": "MSISDN",
            "partyIdentifier": "123456789",
            "fspId": "MobileMoney"
        }
    },
    "payer": {
        "personalInfo": {
            "complexName": {
                "firstName": "Mats",
                "lastName": "Hagman"
            }
        },
        "partyIdInfo": {
            "partyIdType": "MSISDN",
            "partyIdentifier": "9876543",
            "fspId": "BankNrOne"
        }
    },
    "amountType": "RECEIVE",
    "amount": {
        "amount": "100",
        "currency": "USD"
    },
    "transactionType": {
        "scenario": "TRANSFER",
        "initiator": "PAYER",
        "initiatorType": "CONSUMER",
        "balanceOfPayments": "110"
    },
    "note": "From Mats",
    "expiration": "2017-11-15T22:17:28.985-01:00"
}</con:request><con:originalUri>http://172.17.0.3/quotes</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Transfer Quote Props" id="ade3fa8b-9c26-4a6b-9a81-c476c4e8cbbe"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="restrequest" name="PUT Quotes" id="fe467d9e-ed66-41a8-b8af-965241c312b8"><con:settings/><con:config service="Quoting related parts of Open API for FSP Interoperability (FSPIOP) (Implementation Friendly Version)" resourcePath="/quotes/{ID}" methodName="QuotesByID1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT Quotes" id="bd1b43d7-1bc8-4512-bbcd-eb7bdc954e93" mediaType="application/json" postQueryString="false"><con:settings/><con:endpoint>http://172.17.0.3:3000</con:endpoint><con:request/><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="ID" value="000" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>content-length</con:entry><con:entry>ID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:properties/><con:wssContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:sensitiveInformation/></con:soapui-project>